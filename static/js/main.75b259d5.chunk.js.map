{"version":3,"sources":["components/NumButton.js","logo.svg","components/const.js","components/MissingMjCal.js","App.js","reportWebVitals.js","index.js"],"names":["NumButton","className","onClick","props","this","value","React","Component","intro","web_logo","src","logo","alt","intro_link","href","target","rel","MissingMjCal","MjInHandNum","Array","fill","bNeedAPair","MjInHand","TotalMjNum","MjGroup","length","i","MAX_MJ_TYPE","testMjList","slice","push","sort","ans","formGroups","possibleGroup","num","group","MjList","MjGroupList","targetMj","shift","nextIndex","findIndex","el","splice","MjNum","bAdd","MjIndex","matchIndex","App","state","mjInHand","objMissingMjCal","index","renderMj","changeMjNum","calMissingMahjong","forceUpdate","setState","clickToAdd","clickToDelete","rdAns","forEach","mj_ans","bRed","btn_mj9","btn_myMj","renderAnswer","LayoutDef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75b259d5.chunk.js","sourcesContent":["import React from 'react';\n\nclass NumButton extends React.Component {\n    render() {\n        return (\n            <button className=\"button\" onClick={() => this.props.onClick()}>\n            {this.props.value}\n            </button>\n        )\n    }\n  }\n\n  export default NumButton","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from '../logo.svg';\n\nexport const intro = <h3> 選擇你的數牌 </h3>;\nexport const web_logo = <img src={logo} className=\"App-logo\" alt=\"logo\" />;\n\nexport const intro_link = <a\n  className=\"App-link\"\n  href=\"https://github.com/chifai\"\n  target=\"_blank\"\n  rel=\"noopener noreferrer\"\n>\n  click here\n                  </a>;\n","// to calculate the missing mahjong\nconst MAX_MJ_TYPE = 9;\nconst MAX_MJ_NUM = 4;\nconst MAX_MJ_CHOICE = 16;   // maximum 16 pieces\n\nclass MissingMjCal {\n    constructor() {\n        this.MjInHandNum = Array(MAX_MJ_TYPE).fill(0);  // array to store each mj number (each one max: 4)\n        this.bNeedAPair = false;                        // true: need to include a pair\n        this.MjInHand = [];                             // to store mj in hand in sorted order\n        this.TotalMjNum = 0;\n    }\n\n    // to set NeedAPair is true or not\n    setNeedAPair(bNeedAPair) {\n        this.bNeedAPair = bNeedAPair;\n    }\n\n    // calculate the missing mahjong\n    calMissingMahjong() {\n        // do not need to include a pair\n        let MjGroup = [];\n        if (this.bNeedAPair === false) {\n            // return null as not valid when the number is not right\n            if (this.MjInHand.length % 3 !== 2) return [];\n            for (let i = 1; i < MAX_MJ_TYPE + 1; i++) {\n                let testMjList = this.MjInHand.slice();\n                testMjList.push(i);\n                testMjList.sort();\n                let ans = this.formGroups(testMjList);\n                if (ans !== null) {\n                    let possibleGroup = { num: i, group: ans };\n                    MjGroup.push(possibleGroup);\n                }\n            }\n        }\n        else {\n            // return null as not valid when the number is not right\n            if (this.MjInHand.length % 3 !== 1) return [];\n            for (let i = 1; i < MAX_MJ_TYPE + 1; i++) {\n\n            }\n        }\n        //console.log(MjGroup);\n        return MjGroup;\n    }\n\n    // form groups from a sorted MjList, return list of formed groups\n    // return null if not exist\n    formGroups(MjList) {\n        let MjGroupList = [];\n        while (MjList.length > 0) {\n            // get the first one from the list and find a group\n            let targetMj = MjList.shift();\n            MjGroupList.push(targetMj);\n            //console.log({MjList:MjList});\n\n            // find the next two\n            for (let i = 0; i < 2; i++) {\n                // find next one\n                let nextIndex = MjList.findIndex(el => el === targetMj + 1);\n                targetMj++;\n\n                //console.log({nextIndex: nextIndex});\n                //console.log({targetMj: targetMj});\n\n                // not matched\n                if (nextIndex === -1) return null;\n\n                // found matched, push to group\n                MjGroupList.push(MjList.splice(nextIndex, 1)[0]);\n                //console.log({grouplist: MjGroupList});\n            }\n        }\n        //console.log({Grouplist: MjGroupList});\n        return MjGroupList;\n    }\n\n    // add or minus one from current mj in hand\n    changeMjNum(MjNum, bAdd) {\n        // mj num can only be 1 - 9\n        let MjIndex = MjNum - 1;\n\n        if (MjIndex < 0 || MjIndex >= MAX_MJ_TYPE) return false;\n        if (bAdd === true) {\n            if (this.TotalMjNum === MAX_MJ_CHOICE) return false;\n            if (this.MjInHandNum[MjIndex] === MAX_MJ_NUM) return false;\n            this.MjInHandNum[MjIndex]++;\n\n            // push the mj number and sort\n            this.MjInHand.push(MjNum)\n            this.TotalMjNum++;\n        }\n        else {\n            if (this.MjInHandNum[MjIndex] === 0) return false;\n            this.MjInHandNum[MjIndex]--;\n\n            // delete the matching one\n            const matchIndex = this.MjInHand.findIndex(el => el === MjNum);\n            this.MjInHand.splice(matchIndex, 1);\n            this.TotalMjNum--;\n        }\n\n        // sort the number\n        this.MjInHand.sort();\n        return true;\n    }\n}\n\nexport default MissingMjCal;","import React from 'react';\nimport './App.css';\nimport NumButton from './components/NumButton';\nimport * as LayoutDef from './components/const';\nimport MissingMjCal from './components/MissingMjCal';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mjInHand: [],\n      possibleGroup: [],\n    }\n    this.objMissingMjCal = new MissingMjCal();\n    for (let index = 0; index < 16; index++) {\n      this.state.mjInHand.push(this.renderMj(index, false))\n    }\n\n    this.possibleGroup = [];\n  }\n\n  clickToAdd(i) {\n    if (this.objMissingMjCal.changeMjNum(i, true) === true) {\n      this.possibleGroup = this.objMissingMjCal.calMissingMahjong().slice();\n      this.forceUpdate();\n    }\n    \n  }\n\n  clickToDelete(i) {\n    if (this.objMissingMjCal.changeMjNum(i, false) === true) {\n      this.setState({possibleGroup: this.objMissingMjCal.calMissingMahjong()});\n    }\n  }\n\n  renderMj(index, bAdd) {\n    if (bAdd === true) {\n      return <NumButton value={index} onClick={() => this.clickToAdd(index)} />;\n    }\n    else {\n      return <NumButton value={index} onClick={() => this.clickToDelete(index)} />;\n    }\n  }\n\n  renderAnswer() {\n    let rdAns = [];\n    let num = this.possibleGroup.length;\n    if(num === 0) {\n      return; \n    }\n\n    this.possibleGroup.forEach(el => {\n      const mj_ans = [];\n      let bRed = false;\n      el.group.forEach(MjNum => {\n        if (MjNum === el.num && bRed === false) {\n          mj_ans.push(<button className=\"button_red\">{MjNum}</button>);\n          bRed = true;\n        }\n        else {\n          mj_ans.push(<button className=\"button\">{MjNum}</button>);\n        }\n      })\n      rdAns.push(<div>{mj_ans}</div>);\n      rdAns.push(<br></br>);\n    });\n\n    <button className=\"button\"></button>\n\n    return rdAns;\n  }\n\n  render() {\n    // create mahjong buttons with 1-9\n    const btn_mj9 = [];\n    const btn_myMj = [];\n    for (let index = 0; index < 9; index++) {\n      btn_mj9.push(this.renderMj(index + 1, true))\n    }\n\n    this.objMissingMjCal.MjInHand.forEach(el => {\n      btn_myMj.push(this.state.mjInHand[el]);\n    });\n\n    const mj_ans = this.renderAnswer();\n\n\n    const rdAns = this.renderAnswer();\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* print header */}\n          {LayoutDef.web_logo}\n          {LayoutDef.intro}\n        </header>\n\n        <body className=\"App-body\">\n          {/* print buttons */}\n          <div>{btn_mj9}</div>\n          <h3>你的手牌</h3>\n          <div>{btn_myMj}</div>\n          <h3>你的聽牌組合</h3>\n          {rdAns}\n        </body>\n\n        <footer className=\"App-footer\">\n          {/* print footer link */}\n          {LayoutDef.intro_link}\n        </footer>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}