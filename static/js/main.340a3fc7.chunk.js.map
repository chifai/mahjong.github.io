{"version":3,"sources":["logo.svg","components/const.js","components/MyMahjong.js","components/MissingMjCal.js","App.js","reportWebVitals.js","index.js"],"names":["intro","web_logo","src","logo","className","alt","intro_link","href","target","rel","MyMahjong","grouped","ungrouped","pairNum","this","slice","length","push","splice","matchedInd1","findIndex","el","matchedInd2","shift","MyMj","MissingMjCal","MjInHandNum","Array","fill","MjInHand","TotalMjNum","console","log","numToDitch","MjGroup","tryMissingMj","tryDitchMj","SortedMj","nPairNum","formMjGroups","possibleNum","possibleMjGroup","ans","lastDitchNum","i","testMjList","tempPossibleMjGroup","MAX_MJ_TYPE","sort","possibleGroup","num","group","normalans","pendingMj","validGroup","popMJ","pop","tempMyMj","isDone","getGrouped","copy","groupPair","groupContThree","groupThreeAKind","MjNum","bAdd","all","bNeedAPair","InHand","MjIndex","matchIndex","App","props","objMissingMjCal","changeMjNum","temp","calMissingMahjong","forceUpdate","index","onClick","clickToAdd","clickToDelete","rdAns","forEach","mj_ans","bRed","mjGroup","renderEachGroup","btn_mj9","btn_myMj","renderAnswer","renderMjButton","RenderInHand","LayoutDef","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.340a3fc7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from '../logo.svg';\n\nexport const intro = <h3> 選擇你的手牌 </h3>;\nexport const web_logo = <img src={logo} className=\"App-logo\" alt=\"logo\" />;\n\nexport const intro_link = <a\n  className=\"App-link\"\n  href=\"https://github.com/chifai\"\n  target=\"_blank\"\n  rel=\"noopener noreferrer\"\n>\n  click here\n                  </a>;\n","class MyMahjong {\n    constructor(grouped = [], ungrouped = [], pairNum = 0) {\n        this.grouped = grouped.slice();\n        this.ungrouped = ungrouped.slice();\n        this.pairNum = pairNum;\n    }\n\n    isDone() {\n        return this.ungrouped.length === 0;\n    }\n\n    getGrouped() {\n        return this.grouped.slice();\n    }\n\n    groupPair() {\n        if (this.pairNum === 1) return -1;  // invalid\n        let target = this.ungrouped[0];\n        \n        if (target === this.ungrouped[1]) {\n            this.grouped.push([target, target]);\n            this.ungrouped.splice(0, 2);\n            this.pairNum = 1;\n            return 1;   // formed a pair\n        }\n\n        return 0;   // no pair formed\n    }\n\n    groupThreeAKind() {\n        let target = this.ungrouped[0];\n\n        if (target === this.ungrouped[1]) {\n            if (target === this.ungrouped[2]) {\n                this.grouped.push([target, target, target]);\n                this.ungrouped.splice(0, 3);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    groupContThree() {\n        let target = this.ungrouped[0];\n        if (target === 0) return false; // if mh num is 0, cannot be grouped as cont. three\n\n        let matchedInd1 = this.ungrouped.findIndex(el => el === target + 1);\n        let matchedInd2 = this.ungrouped.findIndex(el => el === target + 2);\n\n        if (matchedInd1 !== -1 && matchedInd2 !== -1 ) {\n            this.ungrouped.shift();                     // remove the first\n            this.ungrouped.splice(matchedInd1 - 1, 1);\n            this.ungrouped.splice(matchedInd2 - 2, 1);\n            this.grouped.push([target, target + 1, target + 2]);\n            return true;\n        }\n\n        return false;\n    }\n\n    copy(MyMj) {\n        MyMj.ungrouped = this.ungrouped.slice();\n        MyMj.grouped = this.grouped.slice();\n        MyMj.pairNum = this.pairNum;\n    }\n}\n\nexport default MyMahjong;","import MyMahjong from './MyMahjong';\n\n// to calculate the missing mahjong\nconst MAX_MJ_TYPE = 9;\nconst MAX_MJ_NUM = 4;\nconst MAX_MJ_CHOICE = 16;   // maximum 16 pieces\n\nclass MissingMjCal {\n    constructor() {\n        this.MjInHandNum = Array(MAX_MJ_TYPE).fill(0);  // array to store each mj number (each one max: 4)\n        this.MjInHand = [];                             // to store mj in hand in sorted order\n        this.TotalMjNum = 0;\n    }\n\n    // calculate the missing mahjong\n    calMissingMahjong() {\n        // do not need to include a pair\n        let MjGroup = [];\n\n        console.log(\"Start cal with no pairs\");\n        // return null as not valid when the number is not right\n        if (this.MjInHand.length % 3 === 1) {\n            MjGroup = this.tryMissingMj(this.MjInHand, 0).slice();\n            return [{numToDitch: -1, MjGroup: MjGroup}];\n        }\n        else if (this.MjInHand.length % 3 === 2) {\n            // try to ditch one of the mj\n            return this.tryDitchMj(this.MjInHand, 0);\n        }\n\n        return [];\n    }\n\n    tryDitchMj(SortedMj, nPairNum) {\n        // try current mj list\n        if (this.formMjGroups(SortedMj, nPairNum) !== null) {\n            console.log(\"win\")\n            return [{numToDitch: 0, MjGroup: []}];     // already win!\n        }\n\n        let possibleNum = 1;\n        let possibleMjGroup = [];\n        let numToDitch = 0;\n        let ans = []\n        let lastDitchNum = 0;\n        for (let i = 0; i < SortedMj.length; i++) {\n            if (lastDitchNum === SortedMj[i]) {\n                continue;\n            }\n            let testMjList = SortedMj.slice();\n            testMjList.splice(i, 1);    // remove one mj\n            let tempPossibleMjGroup = this.tryMissingMj(testMjList, nPairNum);\n            if (tempPossibleMjGroup.length > possibleNum) {\n                possibleMjGroup = tempPossibleMjGroup.slice();\n                possibleNum = possibleMjGroup.length;\n                numToDitch = SortedMj[i];\n                ans = [];\n                ans.push({numToDitch: numToDitch, MjGroup: possibleMjGroup})\n                lastDitchNum = numToDitch;\n            }\n            else if (tempPossibleMjGroup.length === possibleNum) {\n                possibleMjGroup = tempPossibleMjGroup.slice();\n                possibleNum = possibleMjGroup.length;\n                numToDitch = SortedMj[i];\n                ans.push({numToDitch: numToDitch, MjGroup: possibleMjGroup})\n                lastDitchNum = numToDitch;\n            }\n        }\n\n        console.log(ans);\n\n        return ans;\n    }\n\n    tryMissingMj(SortedMj, nPairNum) {\n        let MjGroup = [];\n        nPairNum = 0;\n        for (let i = 0; i < MAX_MJ_TYPE + 1; i++) {\n            if (i > 0 && this.MjInHandNum[i - 1] === MAX_MJ_NUM) {\n                continue;\n            }\n            let testMjList = SortedMj.slice();\n            testMjList.push(i);\n            testMjList.sort();\n            let ans = this.formMjGroups(testMjList, nPairNum);\n            if (ans !== null) {\n                let possibleGroup = { num: i, group: ans };\n                MjGroup.push(possibleGroup);\n                console.log({normalans: possibleGroup});\n            }\n        }\n\n        return MjGroup;\n    }\n\n    // input sorted mj in hand, if valid groups are formed, return it\n    formMjGroups(SortedMj, nPairNum) {\n        // when bPair is true, one pair is needed\n        let pendingMj = [];\n        let validGroup = null;\n        pendingMj.push(new MyMahjong([], SortedMj, nPairNum));\n\n        while (pendingMj.length > 0) {\n            // check ungrouped part if any mj can form a valid group: \n            // valid: a pair/three-a-kind/continuous three\n            let popMJ = pendingMj.pop();\n            let tempMyMj;\n\n            // if ungrouped is empty => grouped is the answer\n            if (popMJ.isDone() === true) {\n                validGroup = popMJ.getGrouped();\n                break;\n            }\n\n            tempMyMj = new MyMahjong();\n            popMJ.copy(tempMyMj);\n            if (tempMyMj.groupPair() === 1) {\n                pendingMj.push(tempMyMj);\n            }\n\n            tempMyMj = new MyMahjong();\n            popMJ.copy(tempMyMj);            \n            if (tempMyMj.groupContThree() === true) {\n                pendingMj.push(tempMyMj);\n            }\n\n            tempMyMj = new MyMahjong();\n            popMJ.copy(tempMyMj);\n            if (tempMyMj.groupThreeAKind() === true) {\n                pendingMj.push(tempMyMj);\n            }\n        }\n        return validGroup;\n    }\n\n    // add or minus one from current mj in hand\n    changeMjNum(MjNum, bAdd) {\n        console.log({all: this});\n        if (MjNum === 0) {\n            this.bNeedAPair = !bAdd;\n            if (bAdd === true) {\n                if (this.MjInHand[0] === 0) {\n                    return false;\n                }\n                this.MjInHand.push(0);\n                this.MjInHand.push(0);\n                this.TotalMjNum += 2;      // add 2\n            }\n            else {\n                if (this.MjInHand[0] === 0) {\n                    this.MjInHand.splice(0, 2);\n                    this.TotalMjNum -= 2;\n                }\n            }\n            this.MjInHand.sort();\n            console.log({InHand: this.MjInHand});\n            return true;\n        }\n\n        // mj num can only be 1 - 9\n        let MjIndex = MjNum - 1;\n\n        if (MjIndex < 0 || MjIndex >= MAX_MJ_TYPE) return false;\n        if (bAdd === true) {\n            if (this.TotalMjNum === MAX_MJ_CHOICE) return false;\n            if (this.MjInHandNum[MjIndex] === MAX_MJ_NUM) return false;\n            this.MjInHandNum[MjIndex]++;\n\n            // push the mj number and sort\n            this.MjInHand.push(MjNum)\n            this.TotalMjNum++;\n        }\n        else {\n            if (this.MjInHandNum[MjIndex] === 0) return false;\n            this.MjInHandNum[MjIndex]--;\n\n            // delete the matching one\n            const matchIndex = this.MjInHand.findIndex(el => el === MjNum);\n            this.MjInHand.splice(matchIndex, 1);\n            this.TotalMjNum--;\n        }\n\n        console.log({InHand: this.MjInHand});\n        // sort the number\n        this.MjInHand.sort();\n        return true;\n    }\n}\n\nexport default MissingMjCal;","import React from 'react';\nimport './App.css';\nimport * as LayoutDef from './components/const';\nimport MissingMjCal from './components/MissingMjCal';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.objMissingMjCal = new MissingMjCal();\n    this.ans = [];\n  }\n\n  clickToAdd(i) {\n    if (this.objMissingMjCal.changeMjNum(i, true) === true) {\n      let temp = this.objMissingMjCal.calMissingMahjong();\n      console.log({ temp: temp });\n      this.ans = temp.slice();\n      this.forceUpdate();\n    }\n  }\n\n  clickToDelete(i) {\n    if (this.objMissingMjCal.changeMjNum(i, false) === true) {\n      let temp = this.objMissingMjCal.calMissingMahjong();\n      console.log({ temp: temp });\n      this.ans = temp.slice();\n      this.forceUpdate();\n    }\n  }\n\n  renderMjButton(index, bAdd) {\n    if (bAdd === true) {\n      if (index === 0) {\n        return <button\n          className=\"button\"\n          onClick={() => this.clickToAdd(index)}>\n          {'發'}\n        </button>;\n      }\n      return <button\n        className=\"button\"\n        onClick={() => this.clickToAdd(index)}>\n        {index}\n      </button>;\n    }\n    else {\n      if (index === 0) {\n        return <button\n          className=\"button\"\n          onClick={() => this.clickToDelete(index)}>\n          {'發'}\n        </button>;\n      }\n      return <button\n        className=\"button\"\n        onClick={() => this.clickToDelete(index)}>\n        {index}\n      </button>;\n    }\n  }\n\n  renderEachGroup(MjGroup, rdAns) {\n    MjGroup.forEach(el => {\n      const mj_ans = [];\n      let bRed = false;\n      el.group.forEach(mjGroup => {\n        mjGroup.forEach(MjNum => {\n          if (MjNum === el.num && bRed === false) {\n            if (MjNum === 0)\n              mj_ans.push(<button className=\"button_red\">{'發'}</button>);\n            else\n              mj_ans.push(<button className=\"button_red\">{MjNum}</button>);\n            bRed = true;\n          }\n          else {\n            if (MjNum === 0)\n              mj_ans.push(<button className=\"button\">{'發'}</button>);\n            else\n              mj_ans.push(<button className=\"button\">{MjNum}</button>);\n          }\n        })\n      })\n      rdAns.push(<div>{mj_ans}</div>);\n      rdAns.push(<br></br>);\n    });\n\n    return rdAns;\n  }\n\n  renderAnswer() {\n    // render each {numToDitch: 0, MjGroup: []}\n    let rdAns = []\n\n    this.ans.forEach(el => {\n      console.log({ el: el });\n      if (el.numToDitch === 0) {\n        rdAns.push(<h3>已糊牌</h3>);\n      }\n      else if (el.numToDitch === -1) {\n        if (el.MjGroup.length === 0) {\n          rdAns.push(<h3>無法聽牌</h3>);\n        }\n        else {\n          rdAns.push(<h3>你的聽牌組合</h3>);\n          this.renderEachGroup(el.MjGroup, rdAns);\n        }\n      }\n      else {\n        rdAns.push(<h3>打掉{el.numToDitch}號牌，聽以下組合</h3>);\n        this.renderEachGroup(el.MjGroup, rdAns);\n      }\n\n    })\n    return rdAns;\n  }\n\n  render() {\n    const btn_mj9 = [];\n    const btn_myMj = [];\n    const rdAns = this.renderAnswer();\n\n    // create mahjong buttons, click to add\n    btn_mj9.push(this.renderMjButton(0, true));\n    for (let index = 0; index < 9; index++) {\n      btn_mj9.push(this.renderMjButton(index + 1, true))\n    }\n\n    console.log({RenderInHand: this.objMissingMjCal.MjInHand});\n\n    // create mahjong in hand, click to delete\n    this.objMissingMjCal.MjInHand.forEach(el => {\n      btn_myMj.push(this.renderMjButton(el, false));\n    });\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* print header */}\n          {LayoutDef.web_logo}\n          {LayoutDef.intro}\n        </header>\n\n        <body className=\"App-body\">\n          {/* print buttons */}\n          <div>{btn_mj9}</div>\n          <h3>你的手牌</h3>\n          <div>{btn_myMj}</div>\n          {rdAns}\n        </body>\n\n        <footer className=\"App-footer\">\n          {/* print footer link */}\n          {LayoutDef.intro_link}\n        </footer>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}